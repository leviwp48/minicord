# Based on default config of nginx 1.14.2
# Define the user that will own and run the Nginx server.
#user nginx;

# Define the number of worker processes; recommended value is the number of
# cores that are being used by the server
# auto will default to number of vcpus/cores.
worker_processes auto;

# Include nginx modules
include /etc/nginx/modules-enabled/*.conf;

# Default pid file location.
pid /run/nginx.pid;

# Turn off daemon mode to be watched by supervisord.
daemon off;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Define the location on the file system of the error log, plus the minimum
# severity to log messages for. Here, we will logs to stderr and set minimum
# severity to warn.
error_log stderr warn;

# events block defines the parameters that affect connection processing.
events {
    # Define the maximum number of simultaneous connections that can be opened by a worker process
    worker_connections  1024;
}


# http block defines the parameters for how NGINX should handle HTTP web traffic
http {
    types_hash_max_size 2048;

    # Include the file defining the list of file types that are supported by NGINX
    include /etc/nginx/mime.types;

    # Define the default file type that is returned to the user
    default_type application/octet-stream;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 30m;

    # Define the format of access log messages.
    log_format  main escape=json '{'
                                    '"message": "[NGINX] $request_method $uri $status $request_time(sec)",'
                                    '"@timestamp": "$time_iso8601",'
                                    '"ecs": {'
                                        '"version": "8.4"'
                                    '},'
                                    '"event": {'
                                        '"dataset": "nginx.access"'
                                    '},'
                                    '"client": {'
                                        '"ip": "$remote_addr"'
                                    '},'
                                    '"url": {'
                                        '"path": "$uri",'
                                        '"host": "$host",'
                                        '"full": "$scheme://$host:$server_port$request_uri",'
                                        '"query": "$args"'
                                    '},'
                                    '"http": {'
                                        '"version": "$server_protocol",'
                                        '"request": {'
                                            '"method": "$request_method",'
                                            '"headers": {'
                                                '"x-forwarded-for": "$http_x_forwarded_for",'
                                                '"user-agent": "$http_user_agent",'
                                                '"traceparent": "$http_traceparent",'
                                                '"tracestate": "$http_tracestate",'
                                                '"content-type": "$http_content_type"'
                                            '},'
                                            '"body": {'
                                                '"size": $request_length'
                                            '}'
                                        '},'
                                        '"response": {'
                                            '"status_code": $status,'
                                            '"headers": {},'
                                            '"duration": $request_time,'
                                            '"body": {'
                                                '"size": $body_bytes_sent'
                                            '}'
                                        '}'
                                    '},'
                                    '"nginx": {'
                                        '"version": "$nginx_version",'
                                        '"upstream_response_time": $upstream_response_time'                                        
                                    '}'
                                  '}';


    # Enable conditional logging. Nginx won't log 2xx or redirects
    # 2xx are being logged by after_request, this is currently duplicating
    map $status $loggable {
        ~^[23]  0;
        default 1;
    }

    # Define the location of the log of access attempts to NGINX
    access_log /dev/stdout main if=$loggable;

    # Define the parameters to optimize the delivery of static content
    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;

    # Define the timeout value for keep-alive connections with the client
    keepalive_timeout  65;

    # Define the usage of the gzip compression algorithm to reduce the amount of data to transmit
    gzip  on;
    gzip_disable "msie6";

    # Include additional parameters for virtual server(s).
    # core_public_server.conf will imported here.
    include /etc/nginx/conf.d/*.conf;
}